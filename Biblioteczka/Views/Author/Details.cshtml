@using X.PagedList
@using Biblioteczka.Data;

@model BookViewModel
@{
     ViewData["Title"] = "O autorze";
     Tuple<IPagedList<BookViewModel>, string, string> paginationData = new Tuple<IPagedList<BookViewModel>, string, string>(@Model.BookList, "Autorzy", "Szczegoly");
}

<div class="mb-3 d-flex justify-content-between">
    <partial name="Templates/_BackButton"/>

    @if (User.IsInRole(AppData.Admin) || User.IsInRole(AppData.Librarian)){
        <a class="btn btn-success" asp-route-id="@Model.Author.Id" asp-controller="Author" asp-action="Edit"><i class="bi bi-pencil-square"></i><label class="ms-2">Edytuj</label></a>
    }
</div>

<div class="col-sm-6 mx-auto bg-white rounded shadow d-flex">
    <div class="col-12 p-3">
        <div class="text-center">
            <h4>@Model.Author.Name @Model.Author.LastName</h4>
        </div>
    </div>  
</div>

@if (User.IsInRole("Admin")){
    <partial name="Templates/_BookListAdmin"/>
}
else {
    <partial name="Templates/_BookList"/>
}

<partial name="Templates/_Pagination" model="@paginationData"/>